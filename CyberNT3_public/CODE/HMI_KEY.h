/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : HMI_KEY.H
**     Project   : CyberNT3
**     Processor : 56F8366
**     Component : ADC
**     Version   : Component 01.580, Driver 02.05, CPU db: 2.87.042
**     Compiler  : Metrowerks DSP C Compiler
**     Date/Time : 2011/8/20, 22:03
**     Abstract  :
**         This device "ADC" implements an A/D converter,
**         its control methods and interrupt/event handling procedure.
**     Settings  :
**         AD control register         : ADCB_ADCR1  [62016]
**         AD control register         : ADCB_ADCR2  [62017]
**         AD control register         : ADCB_ADZCC  [62018]
**         AD control register         : ADCB_ADLST1 [62019]
**         AD control register         : ADCB_ADLST2 [62020]
**         AD control register         : ADCB_ADSDIS [62021]
**         AD control register         : ADCB_ADSTAT [62022]
**         AD control register         : ADCB_ADLSTAT [62023]
**         AD control register         : ADCB_ADZCSTAT [62024]
**         AD control register         : ADCB_ADLLMT0 [62033]
**         AD control register         : ADCB_ADLLMT1 [62034]
**         AD control register         : ADCB_ADLLMT2 [62035]
**         AD control register         : ADCB_ADLLMT3 [62036]
**         AD control register         : ADCB_ADLLMT4 [62037]
**         AD control register         : ADCB_ADLLMT5 [62038]
**         AD control register         : ADCB_ADLLMT6 [62039]
**         AD control register         : ADCB_ADLLMT7 [62040]
**         AD control register         : ADCB_ADHLMT0 [62041]
**         AD control register         : ADCB_ADHLMT1 [62042]
**         AD control register         : ADCB_ADHLMT2 [62043]
**         AD control register         : ADCB_ADHLMT3 [62044]
**         AD control register         : ADCB_ADHLMT4 [62045]
**         AD control register         : ADCB_ADHLMT5 [62046]
**         AD control register         : ADCB_ADHLMT6 [62047]
**         AD control register         : ADCB_ADHLMT7 [62048]
**         AD control register         : ADCB_ADOFS0 [62049]
**         AD control register         : ADCB_ADOFS1 [62050]
**         AD control register         : ADCB_ADOFS2 [62051]
**         AD control register         : ADCB_ADOFS3 [62052]
**         AD control register         : ADCB_ADOFS4 [62053]
**         AD control register         : ADCB_ADOFS5 [62054]
**         AD control register         : ADCB_ADOFS6 [62055]
**         AD control register         : ADCB_ADOFS7 [62056]
**         AD control register         : ADCB_ADPOWER [62057]
**         AD control register         : ADCB_CAL    [62058]
**         User handling procedure     : not specified
**         Number of conversions       : 1
**         AD resolution               : 12-bit
**
**         Input pins
**
**
**
**         Initialization:
**              Conversion             : Enabled
**              Event                  : Enabled
**         High speed mode
**             Prescaler               : divide-by-62
**     Contents  :
**         Measure    - byte HMI_KEY_Measure(bool WaitForResult);
**         GetValue16 - byte HMI_KEY_GetValue16(word *Values);
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

/* MODULE HMI_KEY. */

#ifndef __HMI_KEY
#define __HMI_KEY

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PE_Timer.h"

/* MODULE HMI_KEY. */



byte HMI_KEY_Measure(bool WaitForResult);
/*
** ===================================================================
**     Method      :  HMI_KEY_Measure (component ADC)
**
**     Description :
**         This method performs one measurement on all channels that
**         are set in the bean inspector. (Note: If the <number of
**         conversions> is more than one the conversion of A/D channels
**         is performed specified number of times.)
**     Parameters  :
**         NAME            - DESCRIPTION
**         WaitForResult   - Wait for a result of a
**                           conversion. If <interrupt service> is
**                           disabled, A/D peripheral doesn't support
**                           measuring all channels at once or Autoscan
**                           mode property isn't enabled and at the same
**                           time the <number of channel> is greater
**                           than 1, then the WaitForResult parameter is
**                           ignored and the method waits for each
**                           result every time. If the <interrupt
**                           service> is disabled and a <number of
**                           conversions> is greater than 1, the
**                           parameter is ignored and the method also
**                           waits for each result every time.
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_DISABLED - Device is disabled
**                           ERR_BUSY - A conversion is already running
** ===================================================================
*/

byte HMI_KEY_GetValue16(word *Values);
/*
** ===================================================================
**     Method      :  HMI_KEY_GetValue16 (component ADC)
**
**     Description :
**         This method returns the last measured values of all channels
**         justified to the left. Compared with <GetValue> method this
**         method returns more accurate result if the <number of
**         conversions> is greater than 1 and <AD resolution> is less
**         than 16 bits. In addition, the user code dependency on <AD
**         resolution> is eliminated.
**     Parameters  :
**         NAME            - DESCRIPTION
**       * Values          - Pointer to the array that contains
**                           the measured data.
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_NOTAVAIL - Requested value not
**                           available
**                           ERR_OVERRUN - External trigger overrun flag
**                           was detected after the last value(s) was
**                           obtained (for example by GetValue). This
**                           error may not be supported on some CPUs
**                           (see generated code).
** ===================================================================
*/

void HMI_KEY_Init(void);
/*
** ===================================================================
**     Method      :  HMI_KEY_Init (component ADC)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/* END HMI_KEY. */

#endif /* ifndef __HMI_KEY */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.00 [04.35]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
